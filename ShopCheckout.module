<?php

class ShopCheckout extends WireData implements Module {

	public static function getModuleInfo() {

		return array(
			'title' => 'Shop Checkout',
			'version' => 001,
			'summary' => 'Handles checkout process for PW Shop',
			'singular' => false,
			'autoload' => true,
			'requires' => array("ShopCart", "ShopOrders")  
			);
	}

	public function init() {
		
	}

	public function ready() {
		
		if (!($this->page->template->name == "sc-checkout")) return false;
		
		

		if($this->input->post->update) {
			$this->modules->ShopCart->updateCart($this->input->post->items);
			$this->session->redirect("./");
		}

		if($this->input->post->checkout) {
			$this->modules->ShopCart->updateCart($this->input->post->items);
			$this->session->redirect("./?checkout=1");
		}

		if($this->input->post->complete) {
			$this->completeOrder();
			$this->session->redirect("./?thankyou=1");
		}

		if($this->input->get->remove) {
			$product_id = (int) $this->input->get->remove;
			$this->modules->ShopCart->addProductToCart($this->pages->get($product_id), 0);
			$this->session->redirect("./");
		}

	}

	public function renderCheckout() {

		if($this->input->get->checkout) {
			return $this->renderCheckoutForm();
		}

		$items = $this->modules->ShopCart->getCurrentCart();


		if (count($items) == 0) {
			return $this->_("No items in cart");
		}

		$total_sum = $this->modules->ShopCart->getTotalSumFromItems($items);

		$out  = "<h2>" . $this->_("Items in your cart:") . "</h2>";
		$out .= "<form method='post' action='./'><table>";
		$out .= "<tr><th>" . $this->_('Product') . "</th><th>" . $this->_('Quantity') . "</th><th>" . $this->_('Price') . "</th><th>". $this->_('Remove?') ."</th></tr>";

		foreach($items as $item) {

			// get product price from actual product page
			$product = $this->pages->get($item->product_id);
			$total_price = $item->qty * $product->sc_price;

			$out .= "<tr>";
			$out .= "<td>{$product->title}</td>";
			$out .= "<td><input data-price='". $product->sc_price ."' name='items[{$product->id}]' type='number' size='2' value='". (int) $item->qty ."'/></td>";
			$out .= "<td>{$total_price}</td>";
			$out .= "<td><a class='remove' href='./?remove=". $product->id ."'>". $this->_("Remove") ."</a></td>";
			$out .= "</tr>";
		}

		$out .= "<tr class='final'><td>". $this->_("Total:") ."</td><td>&nbsp;</td><td id='total_sum'>$total_sum</td><td></td></tr>";

		$out .= "</table>";

		$out .= "<input type='submit' name='update' value=' ".  $this->_("Update Cart") ."' />";
		$out .= "<input type='submit' name='checkout' value=' ".  $this->_("Continue to checkout") ."' />";

		$out .= "</form>";

		return $out . '<br>';
	}

	public function renderCheckoutForm() {
		$out  = "<h2>" . $this->_("Fill in your details and complete the order.") . "</h2>";
		$out .= "<form action='./' method='post'>";
		$out .= "<label for='fullname'>" . $this->_("Fullname:") . "</label><br/>";
		$out .= "<input name='fullname' /><br/><br/>";
		$out .= "<label for='email'>" . $this->_("E-Mail:") . "</label><br/>";
		$out .= "<input name='email' /><br/><br/>";
		$out .= "<label for='address'>" . $this->_("Address:") . "</label><br/>";
		$out .= "<textarea name='address'></textarea><br/><br/>";
		$out .= "<input type='submit' name='complete' value='". $this->_("Complete the order") ."' />";
		$out .= "</form>";

		return $out;
	}

	public function completeOrder() {
		// TODO: Sanitize and validate!!!
		$fullname = $this->input->post->fullname;
		$address = $this->input->post->address;
		$email = $this->input->post->email;
		
		$items = $this->getCurrentCart();
		
		$order = new Page();
		$order->template = $this->templates->get('sc-order');
		$order->parent = $this->pages->get("template=admin,name=orders");
		$order->title = "Tilaus: $fullname";
		$order->sc_fullname = $fullname;
		$order->sc_shippingaddress = $address;
		$order->sc_price = $this->getTotalSumFromItems($items);
		$order->sc_customer = $this->user;
		$admin = $this->pages->get($this->config->adminRootPageID);
		$order->sc_status = $this->pages->get("/{$admin->name}/shop/settings/statuses/")->children()->first();
		$order->save();
		
		foreach ($items as $item) {
			$product = $this->pages->get($item->product_id);
			
			$p = new Page();
			$p->template = $this->templates->get('sc-order-item');
			$p->parent = $order;
			$p->title = $product->title;
			$p->sc_price = $product->sc_price;
			$p->sc_qty = $item->qty;
			$p->sc_product = $product;
			$p->save();
		}
		
		$this->db->query("DELETE FROM ShopCart WHERE session_id = '". session_id() ."'");
	}

	public function install() {
		
	}

	public function uninstall() {

	}
}
